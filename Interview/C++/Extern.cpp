/* 
Extern
在C语言中，修饰符extern用在变量或者函数的声明前，用来说明“此变量/函数是在别处定义的，要在此处引用”。
注意extern声明的位置对其作用域也有关系，如果是在main函数中进行声明的，则只能在main函数中调用，
在其它函数中不能调用。其实要调用其它文件中的函数和变量，只需把该文件用#include包含进来即可，
为啥要用extern？因为用extern会加速程序的编译过程，这样能节省时间。

在C++中extern还有另外一种作用，用于指示C或者C＋＋函数的调用规范。比如在C＋＋中调用C库函数，
就需要在C＋＋程序中用extern “C”声明要引用的函数。这是给链接器用的，
告诉链接器在链接的时候用C函数规范来链接。主要原因是C＋＋和C程序编译完成后在目标代码中命名规则不同，
用此来解决名字匹配的问题。
 */

#include<iostream>

extern int print_extern(char*);

int main(){
    char *tem=new char[100];
    //如果在其他的文件中定义了这个函数 那么就可以编译成功，否则编译失败
    // print(tem);
    
    getchar();
    return 0;
}